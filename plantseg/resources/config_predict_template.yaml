
# model configuration
model:
  # model class
  name:
  # number of input channels to the model
  in_channels:
  # number of output channels
  out_channels:
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order:
  # feature maps scale factor
  f_maps:
  # number of groups in the groupnorm
  num_groups:
  # apply element-wise nn.Sigmoid after the final 1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid:

# predictor configuration
predictor:
  # standard in memory predictor
  name: 'StandardPredictor'
  # padding to be removed from each axis in a given patch in order to avoid checkerboard artifacts
  patch_halo: [8, 16, 16]

# specify the test datasets
loaders:
  # how many subprocesses to use for data loading
  num_workers: 8
  # path to the raw data within the H5
  raw_internal_path: raw
  # (int or tuple) mirror pad the raw image in each axis for best prediction berformance
  mirror_padding: [16, 32, 32]
  # Define test datasets
  test:
    # SliceBuilder configuration, i.e. how to iterate over the input volume patch-by-patch
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [100, 224, 224]
      # train stride between patches
      stride_shape: [40, 100, 100]

    transformer:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true



